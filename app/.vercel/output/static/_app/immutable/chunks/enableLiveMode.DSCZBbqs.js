import{c as q,D as T,M as b,a as C,b as O,d as _,e as w,f as I,g as D,h as G,i as J}from"./index.CjDz-60S.js";import{S as Q,a as m}from"./client.C1mLzEnz.js";import{stegaEncodeSourceMap as R}from"./stegaEncodeSourceMap.8SzLCf01.js";const j={"handshake/syn":I,"handshake/syn-ack":w,"handshake/ack":_,"channel/response":O,"channel/heartbeat":C,"channel/disconnect":b,"overlay/focus":"visual-editing/focus","overlay/navigate":"visual-editing/navigate","overlay/toggle":"visual-editing/toggle","presentation/toggleOverlay":"presentation/toggle-overlay"},$={[I]:"handshake/syn",[w]:"handshake/syn-ack",[_]:"handshake/ack",[O]:"channel/response",[C]:"channel/heartbeat",[b]:"channel/disconnect","visual-editing/focus":"overlay/focus","visual-editing/navigate":"overlay/navigate","visual-editing/toggle":"overlay/toggle","presentation/toggle-overlay":"presentation/toggleOverlay"},x=o=>{const{data:r}=o;return r&&typeof r=="object"&&"domain"in r&&"type"in r&&"from"in r&&"to"in r&&(r.domain==="sanity/channels"&&(r.domain=T),r.to==="overlays"&&(r.to="visual-editing"),r.from==="overlays"&&(r.from="visual-editing"),r.type=j[r.type]??r.type),o},B=o=>(o.domain===T&&(o.domain="sanity/channels"),o.to==="visual-editing"&&(o.to="overlays"),o.from==="visual-editing"&&(o.from="overlays"),o.type=$[o.type]??o.type,o.type==="channel/response"&&o.responseTo&&!o.data&&(o.data={responseTo:o.responseTo}),(o.type==="handshake/syn"||o.type==="handshake/syn-ack"||o.type==="handshake/ack")&&(o.data={id:o.connectionId}),o),P=({context:o},r)=>{const{sources:E,targetOrigin:u}=o,l=B(r.message);E.forEach(v=>{v.postMessage(l,{targetOrigin:u})})},Y=()=>({listen:D(x),requestMachine:q().provide({actions:{"send message":P}})}),A=1e3;function W(o){const{client:r,setFetcher:E,onConnect:u,onDisconnect:l}=o;if(!r||!(r instanceof Q))throw new Error(`Expected \`client\` to be an instance of SanityClient or SanityStegaClient: ${JSON.stringify(r)}`);const{projectId:v,dataset:g}=r.config(),h=m("previewDrafts"),y=m(!1),f=new Map,p=G({name:"loaders",connectTo:"presentation"},J().provide({actors:Y()}));p.onStatus(t=>{t==="connected"?y.set(!0):t==="disconnected"&&y.set(!1)}),p.on("loader/perspective",t=>{if(t.projectId===v&&t.dataset===g){if(t.perspective!=="published"&&t.perspective!=="previewDrafts")throw new Error(`Unsupported perspective: ${JSON.stringify(t.perspective)}`);h.set(t.perspective),M()}}),p.on("loader/query-change",t=>{if(t.projectId===v&&t.dataset===g){const{perspective:n,query:s,params:e}=t;t.result!==void 0&&t.resultSourceMap!==void 0&&r.config().stega.enabled?f.set(JSON.stringify({perspective:n,query:s,params:e}),{...t,result:R(t.result,t.resultSourceMap,r.config().stega)}):f.set(JSON.stringify({perspective:n,query:s,params:e}),t),M()}});let d;const K=y.listen(t=>{t?(d=E({hydrate:(n,s,e)=>{const a=(e==null?void 0:e.perspective)||h.get(),i=JSON.stringify({perspective:a,query:n,params:s}),c=f.get(i);return(c==null?void 0:c.result)!==void 0&&(c==null?void 0:c.resultSourceMap)!==void 0?{loading:!1,error:void 0,data:c.result,sourceMap:c.resultSourceMap,perspective:a}:{loading:y.value===!0&&(e==null?void 0:e.data)===void 0||(e==null?void 0:e.sourceMap)===void 0,error:void 0,data:e==null?void 0:e.data,sourceMap:e==null?void 0:e.sourceMap,perspective:(e==null?void 0:e.perspective)||"published"}},fetch:(n,s,e,a)=>{try{const i=L(n,s,e);if(a.signal.addEventListener("abort",()=>{i(),M()},{once:!0}),M(),e.setKey("error",void 0),a.signal.aborted)return}catch(i){e.setKey("error",i),e.setKey("loading",!1)}}}),u==null||u()):(d==null||d(),l==null||l())}),S=new Set,L=(t,n,s)=>{const e={query:t,params:n,$fetch:s};S.add(e),N();const a=setInterval(()=>N(!0),A);return()=>{clearInterval(a),S.delete(e),N()}},N=t=>{if(!p)throw new Error("No connection");const n=h.get();for(const{query:s,params:e,$fetch:a}of S)p.post({type:"loader/query-listen",data:{projectId:v,dataset:g,perspective:n,query:s,params:e,heartbeat:A}}),!t&&y.value===!0&&a.setKey("loading",!0),a.setKey("perspective",n)};function M(){var s;const t=h.get(),n=[];for(const{query:e,params:a,$fetch:i}of S){const c=JSON.stringify({perspective:t,query:e,params:a}),k=f.get(c);k&&(i.set({data:k.result,error:void 0,loading:!1,perspective:t,sourceMap:k.resultSourceMap}),n.push(...((s=k.resultSourceMap)==null?void 0:s.documents)??[]))}p.post({type:"loader/documents",data:{projectId:v,dataset:g,perspective:t,documents:n}})}const H=p.start();return()=>{d==null||d(),K(),H()}}export{W as enableLiveMode};
